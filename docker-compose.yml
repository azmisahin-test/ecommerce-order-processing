services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - shared_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  websocket:
    build:
      context: .
      dockerfile: websocket/Dockerfile
    container_name: websocket
    ports:
      - "4000:4000"
    networks:
      - shared_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 5s

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: api
    ports:
      - "3000:3000"
    networks:
      - shared_network
    depends_on:
      redis:
        condition: service_healthy
      websocket:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WEBSOCKET_URL=ws://websocket:4000

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    container_name: worker
    networks:
      - shared_network
    depends_on:
      - redis
      - api
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend
    ports:
      - "80:80"
    networks:
      - shared_network
    depends_on:
      - api

networks:
  shared_network:
    driver: bridge
